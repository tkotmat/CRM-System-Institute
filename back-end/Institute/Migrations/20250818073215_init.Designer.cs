// <auto-generated />
using System;
using Institute.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Institute.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250818073215_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Institute.Entity.CrmAccessEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CrmAccess");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Access = "VGVrHBV025Mh/Rq68NX0H7IXt66Fk/xklvql9qsVLAc="
                        });
                });

            modelBuilder.Entity("Institute.Entity.DepartmentEntity", b =>
                {
                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.Property<string>("Head")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LecturerCount")
                        .HasColumnType("integer");

                    b.HasKey("DepartmentName");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentName = "Математика",
                            Head = "Іваненко О.П.",
                            LecturerCount = 10
                        },
                        new
                        {
                            DepartmentName = "Фізика",
                            Head = "Ковальчук С.В.",
                            LecturerCount = 8
                        },
                        new
                        {
                            DepartmentName = "Хімія",
                            Head = "Шевченко М.В.",
                            LecturerCount = 7
                        },
                        new
                        {
                            DepartmentName = "Біологія",
                            Head = "Петренко І.Д.",
                            LecturerCount = 5
                        },
                        new
                        {
                            DepartmentName = "Інформатика",
                            Head = "Ткаченко Н.С.",
                            LecturerCount = 12
                        });
                });

            modelBuilder.Entity("Institute.Entity.EmployeeEntity", b =>
                {
                    b.Property<int>("PassportNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PassportNumber"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsWarVeteran")
                        .HasColumnType("boolean");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TIN")
                        .HasColumnType("integer");

                    b.Property<int>("WorkExperience")
                        .HasColumnType("integer");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PassportNumber");

                    b.HasIndex("DepartmentName");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            PassportNumber = 1001,
                            Category = "Основна",
                            City = "Київ",
                            ContractEndDate = new DateTime(2027, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2026, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Математика",
                            FirstName = "Коваленко",
                            HireDate = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = true,
                            MiddleName = "Олександрович",
                            Position = "Викладач",
                            Street = "вул. Незалежності, 1",
                            TIN = 5001,
                            WorkExperience = 1,
                            lastName = "Олександр"
                        },
                        new
                        {
                            PassportNumber = 1002,
                            Category = "Основна",
                            City = "Львів",
                            ContractEndDate = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Фізика",
                            FirstName = "Шевчук",
                            HireDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Петрівна",
                            Position = "Асистент",
                            Street = "вул. Незалежності, 2",
                            TIN = 5002,
                            WorkExperience = 2,
                            lastName = "Марина"
                        },
                        new
                        {
                            PassportNumber = 1003,
                            Category = "Основна",
                            City = "Одеса",
                            ContractEndDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Хімія",
                            FirstName = "Бондаренко",
                            HireDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Вікторович",
                            Position = "Доцент",
                            Street = "вул. Незалежності, 3",
                            TIN = 5003,
                            WorkExperience = 3,
                            lastName = "Віктор"
                        },
                        new
                        {
                            PassportNumber = 1004,
                            Category = "Основна",
                            City = "Харків",
                            ContractEndDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Біологія",
                            FirstName = "Лисенко",
                            HireDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Ігорівна",
                            Position = "Викладач",
                            Street = "вул. Незалежності, 4",
                            TIN = 5004,
                            WorkExperience = 4,
                            lastName = "Ірина"
                        },
                        new
                        {
                            PassportNumber = 1005,
                            Category = "Основна",
                            City = "Дніпро",
                            ContractEndDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Інформатика",
                            FirstName = "Мельник",
                            HireDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Андрійович",
                            Position = "Асистент",
                            Street = "вул. Незалежності, 5",
                            TIN = 5005,
                            WorkExperience = 5,
                            lastName = "Андрій"
                        },
                        new
                        {
                            PassportNumber = 1006,
                            Category = "Основна",
                            City = "Запоріжжя",
                            ContractEndDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Математика",
                            FirstName = "Ткач",
                            HireDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = true,
                            MiddleName = "Олексіївна",
                            Position = "Доцент",
                            Street = "вул. Незалежності, 6",
                            TIN = 5006,
                            WorkExperience = 6,
                            lastName = "Олена"
                        },
                        new
                        {
                            PassportNumber = 1007,
                            Category = "Основна",
                            City = "Київ",
                            ContractEndDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Фізика",
                            FirstName = "Гончар",
                            HireDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Володимирович",
                            Position = "Викладач",
                            Street = "вул. Незалежності, 7",
                            TIN = 5007,
                            WorkExperience = 7,
                            lastName = "Володимир"
                        },
                        new
                        {
                            PassportNumber = 1008,
                            Category = "Основна",
                            City = "Львів",
                            ContractEndDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Хімія",
                            FirstName = "Кузьменко",
                            HireDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Петрівна",
                            Position = "Асистент",
                            Street = "вул. Незалежності, 8",
                            TIN = 5008,
                            WorkExperience = 8,
                            lastName = "Наталія"
                        },
                        new
                        {
                            PassportNumber = 1009,
                            Category = "Основна",
                            City = "Одеса",
                            ContractEndDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Біологія",
                            FirstName = "Олійник",
                            HireDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Сергійович",
                            Position = "Доцент",
                            Street = "вул. Незалежності, 9",
                            TIN = 5009,
                            WorkExperience = 9,
                            lastName = "Сергій"
                        },
                        new
                        {
                            PassportNumber = 1010,
                            Category = "Основна",
                            City = "Харків",
                            ContractEndDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2017, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Інформатика",
                            FirstName = "Сорока",
                            HireDate = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Анатоліївна",
                            Position = "Викладач",
                            Street = "вул. Незалежності, 10",
                            TIN = 5010,
                            WorkExperience = 10,
                            lastName = "Тетяна"
                        },
                        new
                        {
                            PassportNumber = 1011,
                            Category = "Основна",
                            City = "Дніпро",
                            ContractEndDate = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2016, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Математика",
                            FirstName = "Кравець",
                            HireDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = true,
                            MiddleName = "Юрійович",
                            Position = "Асистент",
                            Street = "вул. Незалежності, 11",
                            TIN = 5011,
                            WorkExperience = 11,
                            lastName = "Юрій"
                        },
                        new
                        {
                            PassportNumber = 1012,
                            Category = "Основна",
                            City = "Запоріжжя",
                            ContractEndDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2015, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Фізика",
                            FirstName = "Романенко",
                            HireDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Світланівна",
                            Position = "Доцент",
                            Street = "вул. Незалежності, 12",
                            TIN = 5012,
                            WorkExperience = 12,
                            lastName = "Світлана"
                        },
                        new
                        {
                            PassportNumber = 1013,
                            Category = "Основна",
                            City = "Київ",
                            ContractEndDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2014, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Хімія",
                            FirstName = "Іваненко",
                            HireDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Віталійович",
                            Position = "Викладач",
                            Street = "вул. Незалежності, 13",
                            TIN = 5013,
                            WorkExperience = 13,
                            lastName = "Віталій"
                        },
                        new
                        {
                            PassportNumber = 1014,
                            Category = "Основна",
                            City = "Львів",
                            ContractEndDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2013, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Біологія",
                            FirstName = "Дмитренко",
                            HireDate = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Олександрівна",
                            Position = "Асистент",
                            Street = "вул. Незалежності, 14",
                            TIN = 5014,
                            WorkExperience = 14,
                            lastName = "Оксана"
                        },
                        new
                        {
                            PassportNumber = 1015,
                            Category = "Основна",
                            City = "Одеса",
                            ContractEndDate = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2012, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Інформатика",
                            FirstName = "Бабенко",
                            HireDate = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Миколайович",
                            Position = "Доцент",
                            Street = "вул. Незалежності, 15",
                            TIN = 5015,
                            WorkExperience = 15,
                            lastName = "Микола"
                        },
                        new
                        {
                            PassportNumber = 1016,
                            Category = "Основна",
                            City = "Харків",
                            ContractEndDate = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2011, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Математика",
                            FirstName = "Поліщук",
                            HireDate = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = true,
                            MiddleName = "Ганнівна",
                            Position = "Викладач",
                            Street = "вул. Незалежності, 16",
                            TIN = 5016,
                            WorkExperience = 16,
                            lastName = "Ганна"
                        },
                        new
                        {
                            PassportNumber = 1017,
                            Category = "Основна",
                            City = "Дніпро",
                            ContractEndDate = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2010, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Фізика",
                            FirstName = "Сидоренко",
                            HireDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Романович",
                            Position = "Асистент",
                            Street = "вул. Незалежності, 17",
                            TIN = 5017,
                            WorkExperience = 17,
                            lastName = "Роман"
                        },
                        new
                        {
                            PassportNumber = 1018,
                            Category = "Основна",
                            City = "Запоріжжя",
                            ContractEndDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2009, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Хімія",
                            FirstName = "Михайленко",
                            HireDate = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Людмилівна",
                            Position = "Доцент",
                            Street = "вул. Незалежності, 18",
                            TIN = 5018,
                            WorkExperience = 18,
                            lastName = "Людмила"
                        },
                        new
                        {
                            PassportNumber = 1019,
                            Category = "Основна",
                            City = "Київ",
                            ContractEndDate = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2008, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Біологія",
                            FirstName = "Козак",
                            HireDate = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Ігорович",
                            Position = "Викладач",
                            Street = "вул. Незалежності, 19",
                            TIN = 5019,
                            WorkExperience = 19,
                            lastName = "Ігор"
                        },
                        new
                        {
                            PassportNumber = 1020,
                            Category = "Основна",
                            City = "Львів",
                            ContractEndDate = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ContractStartDate = new DateTime(2007, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DepartmentName = "Інформатика",
                            FirstName = "Грищук",
                            HireDate = new DateTime(2007, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsWarVeteran = false,
                            MiddleName = "Вікторівна",
                            Position = "Асистент",
                            Street = "вул. Незалежності, 20",
                            TIN = 5020,
                            WorkExperience = 20,
                            lastName = "Вікторія"
                        });
                });

            modelBuilder.Entity("Institute.Entity.PedagogicalLoadEntity", b =>
                {
                    b.Property<string>("Discipline")
                        .HasColumnType("text");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("integer");

                    b.Property<int>("PassportNumber")
                        .HasColumnType("integer");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HoursCount")
                        .HasColumnType("integer");

                    b.Property<int>("Semester")
                        .HasColumnType("integer");

                    b.HasKey("Discipline", "GroupNumber", "PassportNumber");

                    b.HasIndex("DepartmentName");

                    b.HasIndex("PassportNumber");

                    b.ToTable("PedagogicalLoads");

                    b.HasData(
                        new
                        {
                            Discipline = "Математика",
                            GroupNumber = 101,
                            PassportNumber = 1001,
                            DepartmentName = "Математика",
                            HoursCount = 40,
                            Semester = 1
                        },
                        new
                        {
                            Discipline = "Фізика",
                            GroupNumber = 102,
                            PassportNumber = 1002,
                            DepartmentName = "Фізика",
                            HoursCount = 42,
                            Semester = 2
                        },
                        new
                        {
                            Discipline = "Хімія",
                            GroupNumber = 103,
                            PassportNumber = 1003,
                            DepartmentName = "Хімія",
                            HoursCount = 44,
                            Semester = 3
                        },
                        new
                        {
                            Discipline = "Біологія",
                            GroupNumber = 104,
                            PassportNumber = 1004,
                            DepartmentName = "Біологія",
                            HoursCount = 46,
                            Semester = 4
                        },
                        new
                        {
                            Discipline = "Інформатика",
                            GroupNumber = 105,
                            PassportNumber = 1005,
                            DepartmentName = "Інформатика",
                            HoursCount = 48,
                            Semester = 5
                        },
                        new
                        {
                            Discipline = "Англійська мова",
                            GroupNumber = 106,
                            PassportNumber = 1006,
                            DepartmentName = "Математика",
                            HoursCount = 50,
                            Semester = 6
                        },
                        new
                        {
                            Discipline = "Історія",
                            GroupNumber = 107,
                            PassportNumber = 1007,
                            DepartmentName = "Фізика",
                            HoursCount = 52,
                            Semester = 7
                        },
                        new
                        {
                            Discipline = "Географія",
                            GroupNumber = 108,
                            PassportNumber = 1008,
                            DepartmentName = "Хімія",
                            HoursCount = 54,
                            Semester = 8
                        },
                        new
                        {
                            Discipline = "Література",
                            GroupNumber = 109,
                            PassportNumber = 1009,
                            DepartmentName = "Біологія",
                            HoursCount = 56,
                            Semester = 1
                        },
                        new
                        {
                            Discipline = "Механіка",
                            GroupNumber = 110,
                            PassportNumber = 1010,
                            DepartmentName = "Інформатика",
                            HoursCount = 58,
                            Semester = 2
                        },
                        new
                        {
                            Discipline = "Економіка",
                            GroupNumber = 111,
                            PassportNumber = 1011,
                            DepartmentName = "Математика",
                            HoursCount = 60,
                            Semester = 3
                        },
                        new
                        {
                            Discipline = "Правознавство",
                            GroupNumber = 112,
                            PassportNumber = 1012,
                            DepartmentName = "Фізика",
                            HoursCount = 62,
                            Semester = 4
                        },
                        new
                        {
                            Discipline = "Філософія",
                            GroupNumber = 113,
                            PassportNumber = 1013,
                            DepartmentName = "Хімія",
                            HoursCount = 64,
                            Semester = 5
                        },
                        new
                        {
                            Discipline = "Психологія",
                            GroupNumber = 114,
                            PassportNumber = 1014,
                            DepartmentName = "Біологія",
                            HoursCount = 66,
                            Semester = 6
                        },
                        new
                        {
                            Discipline = "Соціологія",
                            GroupNumber = 115,
                            PassportNumber = 1015,
                            DepartmentName = "Інформатика",
                            HoursCount = 68,
                            Semester = 7
                        },
                        new
                        {
                            Discipline = "Хімічна технологія",
                            GroupNumber = 116,
                            PassportNumber = 1016,
                            DepartmentName = "Математика",
                            HoursCount = 70,
                            Semester = 8
                        },
                        new
                        {
                            Discipline = "Екологія",
                            GroupNumber = 117,
                            PassportNumber = 1017,
                            DepartmentName = "Фізика",
                            HoursCount = 72,
                            Semester = 1
                        },
                        new
                        {
                            Discipline = "Технічна механіка",
                            GroupNumber = 118,
                            PassportNumber = 1018,
                            DepartmentName = "Хімія",
                            HoursCount = 74,
                            Semester = 2
                        },
                        new
                        {
                            Discipline = "Мікробіологія",
                            GroupNumber = 119,
                            PassportNumber = 1019,
                            DepartmentName = "Біологія",
                            HoursCount = 76,
                            Semester = 3
                        },
                        new
                        {
                            Discipline = "Геометрія",
                            GroupNumber = 120,
                            PassportNumber = 1020,
                            DepartmentName = "Інформатика",
                            HoursCount = 78,
                            Semester = 4
                        });
                });

            modelBuilder.Entity("Institute.Entity.PhoneEmployeeEntity", b =>
                {
                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("PassportNumber")
                        .HasColumnType("integer");

                    b.HasKey("PhoneNumber", "PassportNumber");

                    b.HasIndex("PassportNumber");

                    b.ToTable("PhoneEmployees");

                    b.HasData(
                        new
                        {
                            PhoneNumber = "+380(67)123456700",
                            PassportNumber = 1001
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432100",
                            PassportNumber = 1001
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456701",
                            PassportNumber = 1002
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432101",
                            PassportNumber = 1002
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456702",
                            PassportNumber = 1003
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432102",
                            PassportNumber = 1003
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456703",
                            PassportNumber = 1004
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432103",
                            PassportNumber = 1004
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456704",
                            PassportNumber = 1005
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432104",
                            PassportNumber = 1005
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456705",
                            PassportNumber = 1006
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432105",
                            PassportNumber = 1006
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456706",
                            PassportNumber = 1007
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432106",
                            PassportNumber = 1007
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456707",
                            PassportNumber = 1008
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432107",
                            PassportNumber = 1008
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456708",
                            PassportNumber = 1009
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432108",
                            PassportNumber = 1009
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456709",
                            PassportNumber = 1010
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432109",
                            PassportNumber = 1010
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456710",
                            PassportNumber = 1011
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432110",
                            PassportNumber = 1011
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456711",
                            PassportNumber = 1012
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432111",
                            PassportNumber = 1012
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456712",
                            PassportNumber = 1013
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432112",
                            PassportNumber = 1013
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456713",
                            PassportNumber = 1014
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432113",
                            PassportNumber = 1014
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456714",
                            PassportNumber = 1015
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432114",
                            PassportNumber = 1015
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456715",
                            PassportNumber = 1016
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432115",
                            PassportNumber = 1016
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456716",
                            PassportNumber = 1017
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432116",
                            PassportNumber = 1017
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456717",
                            PassportNumber = 1018
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432117",
                            PassportNumber = 1018
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456718",
                            PassportNumber = 1019
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432118",
                            PassportNumber = 1019
                        },
                        new
                        {
                            PhoneNumber = "+380(67)123456719",
                            PassportNumber = 1020
                        },
                        new
                        {
                            PhoneNumber = "+380(50)765432119",
                            PassportNumber = 1020
                        });
                });

            modelBuilder.Entity("Institute.Entity.ReferencesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("PassportNumber")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenceType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PassportNumber");

                    b.ToTable("References");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000001"),
                            PassportNumber = 1001,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2027, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000002"),
                            PassportNumber = 1002,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2026, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000003"),
                            PassportNumber = 1003,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2026, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000004"),
                            PassportNumber = 1004,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2026, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000005"),
                            PassportNumber = 1005,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2026, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000006"),
                            PassportNumber = 1006,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2026, 8, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000007"),
                            PassportNumber = 1007,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2026, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000008"),
                            PassportNumber = 1008,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2026, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000009"),
                            PassportNumber = 1009,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2026, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000010"),
                            PassportNumber = 1010,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2026, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000011"),
                            PassportNumber = 1011,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2026, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000012"),
                            PassportNumber = 1012,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2026, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000013"),
                            PassportNumber = 1013,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000014"),
                            PassportNumber = 1014,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2025, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000015"),
                            PassportNumber = 1015,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000016"),
                            PassportNumber = 1016,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000017"),
                            PassportNumber = 1017,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000018"),
                            PassportNumber = 1018,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000019"),
                            PassportNumber = 1019,
                            ReferenceType = "Загальна",
                            ReleaseDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000020"),
                            PassportNumber = 1020,
                            ReferenceType = "Спеціальна",
                            ReleaseDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Institute.Entity.VacationEntity", b =>
                {
                    b.Property<string>("VacationType")
                        .HasColumnType("text");

                    b.Property<int>("PassportNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("VacationType", "PassportNumber");

                    b.HasIndex("PassportNumber");

                    b.ToTable("Vacations");

                    b.HasData(
                        new
                        {
                            VacationType = "Щорічна відпустка",
                            PassportNumber = 1001,
                            EndDate = new DateTime(2027, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка за власний рахунок",
                            PassportNumber = 1002,
                            EndDate = new DateTime(2026, 12, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Навчальна відпустка",
                            PassportNumber = 1003,
                            EndDate = new DateTime(2026, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 10, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Декретна відпустка",
                            PassportNumber = 1004,
                            EndDate = new DateTime(2026, 10, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 9, 21, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка по догляду за дитиною",
                            PassportNumber = 1005,
                            EndDate = new DateTime(2026, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Щорічна відпустка",
                            PassportNumber = 1006,
                            EndDate = new DateTime(2026, 8, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 7, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка за власний рахунок",
                            PassportNumber = 1007,
                            EndDate = new DateTime(2026, 7, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 6, 21, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Навчальна відпустка",
                            PassportNumber = 1008,
                            EndDate = new DateTime(2026, 6, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 5, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Декретна відпустка",
                            PassportNumber = 1009,
                            EndDate = new DateTime(2026, 5, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 4, 21, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка по догляду за дитиною",
                            PassportNumber = 1010,
                            EndDate = new DateTime(2026, 4, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 3, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Щорічна відпустка",
                            PassportNumber = 1011,
                            EndDate = new DateTime(2026, 3, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка за власний рахунок",
                            PassportNumber = 1012,
                            EndDate = new DateTime(2026, 2, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2026, 1, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Навчальна відпустка",
                            PassportNumber = 1013,
                            EndDate = new DateTime(2026, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Декретна відпустка",
                            PassportNumber = 1014,
                            EndDate = new DateTime(2025, 12, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка по догляду за дитиною",
                            PassportNumber = 1015,
                            EndDate = new DateTime(2025, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 10, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Щорічна відпустка",
                            PassportNumber = 1016,
                            EndDate = new DateTime(2025, 10, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 9, 21, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка за власний рахунок",
                            PassportNumber = 1017,
                            EndDate = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Навчальна відпустка",
                            PassportNumber = 1018,
                            EndDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 7, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Декретна відпустка",
                            PassportNumber = 1019,
                            EndDate = new DateTime(2025, 7, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 6, 21, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            VacationType = "Відпустка по догляду за дитиною",
                            PassportNumber = 1020,
                            EndDate = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Institute.Entity.EmployeeEntity", b =>
                {
                    b.HasOne("Institute.Entity.DepartmentEntity", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Institute.Entity.PedagogicalLoadEntity", b =>
                {
                    b.HasOne("Institute.Entity.DepartmentEntity", "Department")
                        .WithMany("PedagogicalLoads")
                        .HasForeignKey("DepartmentName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Institute.Entity.EmployeeEntity", "Employee")
                        .WithMany("PedagogicalLoads")
                        .HasForeignKey("PassportNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Institute.Entity.PhoneEmployeeEntity", b =>
                {
                    b.HasOne("Institute.Entity.EmployeeEntity", "Employee")
                        .WithMany("PhoneEmployees")
                        .HasForeignKey("PassportNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Institute.Entity.ReferencesEntity", b =>
                {
                    b.HasOne("Institute.Entity.EmployeeEntity", "Employee")
                        .WithMany("References")
                        .HasForeignKey("PassportNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Institute.Entity.VacationEntity", b =>
                {
                    b.HasOne("Institute.Entity.EmployeeEntity", "Employee")
                        .WithMany("Vacations")
                        .HasForeignKey("PassportNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Institute.Entity.DepartmentEntity", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("PedagogicalLoads");
                });

            modelBuilder.Entity("Institute.Entity.EmployeeEntity", b =>
                {
                    b.Navigation("PedagogicalLoads");

                    b.Navigation("PhoneEmployees");

                    b.Navigation("References");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
